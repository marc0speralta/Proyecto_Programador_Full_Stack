-- MySQL Script generated by MySQL Workbench
-- Sun May  7 23:24:19 2023
-- Model: New Model    Version: 1.0
-- MySQL Workbench Forward Engineering

SET @OLD_UNIQUE_CHECKS=@@UNIQUE_CHECKS, UNIQUE_CHECKS=0;
SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0;
SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_ENGINE_SUBSTITUTION';

-- -----------------------------------------------------
-- Schema Smart_Fit
-- -----------------------------------------------------
DROP SCHEMA IF EXISTS `Smart_Fit` ;

-- -----------------------------------------------------
-- Schema Smart_Fit
-- -----------------------------------------------------
CREATE SCHEMA IF NOT EXISTS `Smart_Fit` DEFAULT CHARACTER SET utf8 ;
USE `Smart_Fit` ;

-- -----------------------------------------------------
-- Table `Smart_Fit`.`Cliente`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `Smart_Fit`.`Cliente` (
  `idCliente` INT NOT NULL AUTO_INCREMENT,
  `Nombre` VARCHAR(60) NOT NULL,
  `Apellido` VARCHAR(60) NOT NULL,
  `Fecha de nacimiento` DATE NOT NULL,
  `DNI` INT NOT NULL,
  `Dirección` VARCHAR(100) NOT NULL,
  `Telefono` INT NOT NULL,
  `Email` VARCHAR(100) NOT NULL,
  `Nombre de usuario` VARCHAR(60) NOT NULL,
  PRIMARY KEY (`idCliente`))
ENGINE = InnoDB;

CREATE UNIQUE INDEX `DNI_UNIQUE` ON `Smart_Fit`.`Cliente` (`DNI` ASC);

CREATE UNIQUE INDEX `Nombre de usuario_UNIQUE` ON `Smart_Fit`.`Cliente` (`Nombre de usuario` ASC);


-- -----------------------------------------------------
-- Table `Smart_Fit`.`Rutina`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `Smart_Fit`.`Rutina` (
  `idRutina` INT NOT NULL,
  `Descripción` TEXT NOT NULL,
  PRIMARY KEY (`idRutina`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `Smart_Fit`.`Detalle rutina`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `Smart_Fit`.`Detalle rutina` (
  `idDetalle rutina` INT NOT NULL AUTO_INCREMENT,
  `idRutina` INT NOT NULL,
  `Lunes` BIT NULL,
  `Martes` BIT NULL,
  `Miércoles` BIT NULL,
  `Jueves` BIT NULL,
  `Viernes` BIT NULL,
  `Sábado` BIT NULL,
  `Domingo` BIT NULL,
  PRIMARY KEY (`idDetalle rutina`),
  CONSTRAINT `fk_Detalle rutina_Rutina1`
    FOREIGN KEY (`idRutina`)
    REFERENCES `Smart_Fit`.`Rutina` (`idRutina`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;

CREATE INDEX `fk_Detalle rutina_Rutina1_idx` ON `Smart_Fit`.`Detalle rutina` (`idRutina` ASC);


-- -----------------------------------------------------
-- Table `Smart_Fit`.`Entrenador`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `Smart_Fit`.`Entrenador` (
  `idEntrenador` INT NOT NULL AUTO_INCREMENT,
  `Nombre` VARCHAR(60) NOT NULL,
  `Apellido` VARCHAR(60) NOT NULL,
  `Fecha de nacimiento` DATE NOT NULL,
  `DNI` INT NOT NULL,
  `Dirección` VARCHAR(100) NOT NULL,
  `Telefono` INT NOT NULL,
  `Email` VARCHAR(100) NOT NULL,
  `Nombre de usuario` VARCHAR(60) NOT NULL,
  PRIMARY KEY (`idEntrenador`))
ENGINE = InnoDB;

CREATE UNIQUE INDEX `DNI_UNIQUE` ON `Smart_Fit`.`Entrenador` (`DNI` ASC);

CREATE UNIQUE INDEX `Nombre de usuario_UNIQUE` ON `Smart_Fit`.`Entrenador` (`Nombre de usuario` ASC);


-- -----------------------------------------------------
-- Table `Smart_Fit`.`Plan`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `Smart_Fit`.`Plan` (
  `idPlan` INT NOT NULL AUTO_INCREMENT,
  `Nombre` VARCHAR(60) NOT NULL,
  `Por tiempo` BIT NOT NULL,
  `Duración` INT NOT NULL,
  `Valor` DECIMAL NOT NULL,
  `Vencimiento` INT NOT NULL,
  `Descripción` TEXT NOT NULL,
  PRIMARY KEY (`idPlan`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `Smart_Fit`.`Plan cliente`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `Smart_Fit`.`Plan cliente` (
  `idPlan cliente` INT NOT NULL AUTO_INCREMENT,
  `IdCliente` INT NOT NULL,
  `idPlan` INT NOT NULL,
  `Fecha de compra` DATE NOT NULL,
  `Fecha de vencimiento` DATE NOT NULL,
  PRIMARY KEY (`idPlan cliente`),
  CONSTRAINT `fk_Plan cliente_Cliente1`
    FOREIGN KEY (`IdCliente`)
    REFERENCES `Smart_Fit`.`Cliente` (`idCliente`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_Plan cliente_Plan1`
    FOREIGN KEY (`idPlan`)
    REFERENCES `Smart_Fit`.`Plan` (`idPlan`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;

CREATE INDEX `fk_Plan cliente_Cliente1_idx` ON `Smart_Fit`.`Plan cliente` (`IdCliente` ASC);

CREATE INDEX `fk_Plan cliente_Plan1_idx` ON `Smart_Fit`.`Plan cliente` (`idPlan` ASC);


-- -----------------------------------------------------
-- Table `Smart_Fit`.`Progreso cliente`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `Smart_Fit`.`Progreso cliente` (
  `idProgreso cliente` INT NOT NULL,
  `idCliente` INT NOT NULL,
  `idEntrenador` INT NOT NULL,
  `Fecha` DATE NOT NULL,
  `Peso` FLOAT NOT NULL,
  `Altura` FLOAT NOT NULL,
  `IMC` FLOAT NOT NULL,
  `Observaciones` TEXT NULL,
  PRIMARY KEY (`idProgreso cliente`),
  CONSTRAINT `fk_Progreso cliente_Cliente1`
    FOREIGN KEY (`idCliente`)
    REFERENCES `Smart_Fit`.`Cliente` (`idCliente`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_Progreso cliente_Entrenador1`
    FOREIGN KEY (`idEntrenador`)
    REFERENCES `Smart_Fit`.`Entrenador` (`idEntrenador`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;

CREATE INDEX `fk_Progreso cliente_Cliente1_idx` ON `Smart_Fit`.`Progreso cliente` (`idCliente` ASC);

CREATE INDEX `fk_Progreso cliente_Entrenador1_idx` ON `Smart_Fit`.`Progreso cliente` (`idEntrenador` ASC);


-- -----------------------------------------------------
-- Table `Smart_Fit`.`Rutina cliente`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `Smart_Fit`.`Rutina cliente` (
  `idRutina cliente` INT NOT NULL,
  `idCliente` INT NOT NULL,
  `idRutina` INT NOT NULL,
  PRIMARY KEY (`idRutina cliente`),
  CONSTRAINT `fk_Rutina cliente_Cliente1`
    FOREIGN KEY (`idCliente`)
    REFERENCES `Smart_Fit`.`Cliente` (`idCliente`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_Rutina cliente_Rutina1`
    FOREIGN KEY (`idRutina`)
    REFERENCES `Smart_Fit`.`Rutina` (`idRutina`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;

CREATE INDEX `fk_Rutina cliente_Cliente1_idx` ON `Smart_Fit`.`Rutina cliente` (`idCliente` ASC);

CREATE INDEX `fk_Rutina cliente_Rutina1_idx` ON `Smart_Fit`.`Rutina cliente` (`idRutina` ASC);


-- -----------------------------------------------------
-- Table `Smart_Fit`.`Ejercicio`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `Smart_Fit`.`Ejercicio` (
  `idEjercicio` INT NOT NULL AUTO_INCREMENT,
  `idDetalle rutina` INT NOT NULL,
  `Descripción` TEXT NOT NULL,
  `Observación` TEXT NOT NULL,
  PRIMARY KEY (`idEjercicio`),
  CONSTRAINT `fk_Ejercicio_Detalle rutina1`
    FOREIGN KEY (`idDetalle rutina`)
    REFERENCES `Smart_Fit`.`Detalle rutina` (`idDetalle rutina`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;

CREATE INDEX `fk_Ejercicio_Detalle rutina1_idx` ON `Smart_Fit`.`Ejercicio` (`idDetalle rutina` ASC);


-- -----------------------------------------------------
-- Table `Smart_Fit`.`DetallePedido`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `Smart_Fit`.`DetallePedido` (
  `Item` INT NOT NULL,
  `Cantidad` DECIMAL NOT NULL,
  `Precio` DECIMAL NOT NULL,
  `Total` DECIMAL NOT NULL,
  `CostoEnvio` DECIMAL NULL,
  `IdPedido` VARCHAR(45) NOT NULL,
  `IdProducto` VARCHAR(45) NOT NULL,
  PRIMARY KEY (`Item`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `Smart_Fit`.`Pedido`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `Smart_Fit`.`Pedido` (
  `id Pedido` INT NOT NULL,
  `Fecha` DATE NOT NULL,
  `Total` DOUBLE NOT NULL,
  `Forma pago` VARCHAR(45) NOT NULL,
  `Pagado` TINYINT NOT NULL,
  `Entregado` TINYINT NOT NULL,
  `DireccionEnvio` VARCHAR(100) NOT NULL,
  `DireccionFacturacion` VARCHAR(100) NOT NULL,
  `Empresa Transporte` VARCHAR(45) NOT NULL,
  `NroGuia` DECIMAL NOT NULL,
  `CostoTransporte` DECIMAL NOT NULL,
  `NroDocumentoPago` INT NOT NULL,
  `Cliente_idCliente` INT NOT NULL,
  `DetallePedido_Item` INT NOT NULL,
  PRIMARY KEY (`id Pedido`),
  CONSTRAINT `fk_Pedido_Cliente1`
    FOREIGN KEY (`Cliente_idCliente`)
    REFERENCES `Smart_Fit`.`Cliente` (`idCliente`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_Pedido_DetallePedido1`
    FOREIGN KEY (`DetallePedido_Item`)
    REFERENCES `Smart_Fit`.`DetallePedido` (`Item`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;

CREATE INDEX `fk_Pedido_Cliente1_idx` ON `Smart_Fit`.`Pedido` (`Cliente_idCliente` ASC);

CREATE INDEX `fk_Pedido_DetallePedido1_idx` ON `Smart_Fit`.`Pedido` (`DetallePedido_Item` ASC);


-- -----------------------------------------------------
-- Table `Smart_Fit`.`Mensaje`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `Smart_Fit`.`Mensaje` (
  `idMensaje` INT NOT NULL,
  `mFrom` VARCHAR(45) NOT NULL,
  `Titulo` VARCHAR(45) NOT NULL,
  `Mensaje` VARCHAR(100) NOT NULL,
  `Fecha` DATE NOT NULL,
  `Leido` VARCHAR(45) BINARY NOT NULL,
  `Mensajecol` VARCHAR(45) BINARY NOT NULL,
  `Cliente_idCliente` INT NOT NULL,
  PRIMARY KEY (`idMensaje`),
  CONSTRAINT `fk_Mensaje_Cliente1`
    FOREIGN KEY (`Cliente_idCliente`)
    REFERENCES `Smart_Fit`.`Cliente` (`idCliente`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;

CREATE INDEX `fk_Mensaje_Cliente1_idx` ON `Smart_Fit`.`Mensaje` (`Cliente_idCliente` ASC);


-- -----------------------------------------------------
-- Table `Smart_Fit`.`Proveedor`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `Smart_Fit`.`Proveedor` (
  `idProveedor` INT NOT NULL,
  `nombre` VARCHAR(45) NOT NULL,
  `direccion` VARCHAR(45) NOT NULL,
  `ciudad` VARCHAR(45) NOT NULL,
  `pais` VARCHAR(45) NOT NULL,
  `provincia` VARCHAR(45) NOT NULL,
  `telefono` INT NOT NULL,
  `email` VARCHAR(45) NOT NULL,
  PRIMARY KEY (`idProveedor`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `Smart_Fit`.`Producto`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `Smart_Fit`.`Producto` (
  `idProducto` INT NOT NULL,
  `Titulo` VARCHAR(45) NOT NULL,
  `Descripcion` TEXT(250) NOT NULL,
  `Precio` DECIMAL NOT NULL,
  `Existencia` DECIMAL NOT NULL,
  `Peso` DECIMAL NOT NULL,
  `MostrarPortada` VARCHAR(45) BINARY NOT NULL,
  PRIMARY KEY (`idProducto`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `Smart_Fit`.`DetalleCompra`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `Smart_Fit`.`DetalleCompra` (
  `Item` INT NOT NULL,
  `subtotal` DECIMAL NOT NULL,
  `Cantidad` DECIMAL NOT NULL,
  `precio` DECIMAL NOT NULL,
  `idCompra` VARCHAR(45) NOT NULL,
  `Producto_idProducto` INT NOT NULL,
  PRIMARY KEY (`Item`),
  CONSTRAINT `fk_DetalleCompra_Producto1`
    FOREIGN KEY (`Producto_idProducto`)
    REFERENCES `Smart_Fit`.`Producto` (`idProducto`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;

CREATE INDEX `fk_DetalleCompra_Producto1_idx` ON `Smart_Fit`.`DetalleCompra` (`Producto_idProducto` ASC);


-- -----------------------------------------------------
-- Table `Smart_Fit`.`Compra`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `Smart_Fit`.`Compra` (
  `idCompra` INT NOT NULL,
  `Fecha` DATE NOT NULL,
  `Total` DECIMAL NOT NULL,
  `Proveedor_idProveedor` INT NOT NULL,
  `DetalleCompra_Item` INT NOT NULL,
  PRIMARY KEY (`idCompra`),
  CONSTRAINT `fk_Compra_Proveedor1`
    FOREIGN KEY (`Proveedor_idProveedor`)
    REFERENCES `Smart_Fit`.`Proveedor` (`idProveedor`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_Compra_DetalleCompra1`
    FOREIGN KEY (`DetalleCompra_Item`)
    REFERENCES `Smart_Fit`.`DetalleCompra` (`Item`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;

CREATE INDEX `fk_Compra_Proveedor1_idx` ON `Smart_Fit`.`Compra` (`Proveedor_idProveedor` ASC);

CREATE INDEX `fk_Compra_DetalleCompra1_idx` ON `Smart_Fit`.`Compra` (`DetalleCompra_Item` ASC);


-- -----------------------------------------------------
-- Table `Smart_Fit`.`Operador`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `Smart_Fit`.`Operador` (
  `id tipo` INT NOT NULL,
  `id usuario` VARCHAR(45) NOT NULL,
  `tipo` VARCHAR(45) NOT NULL,
  `Mensaje_idMensaje` INT NOT NULL,
  `Pedido_id Pedido` INT NOT NULL,
  `Pedido_IdCliente` VARCHAR(45) NOT NULL,
  `Compra_idCompra` INT NOT NULL,
  PRIMARY KEY (`id tipo`),
  CONSTRAINT `fk_Operador_Mensaje1`
    FOREIGN KEY (`Mensaje_idMensaje`)
    REFERENCES `Smart_Fit`.`Mensaje` (`idMensaje`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_Operador_Pedido1`
    FOREIGN KEY (`Pedido_id Pedido`)
    REFERENCES `Smart_Fit`.`Pedido` (`id Pedido`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_Operador_Compra1`
    FOREIGN KEY (`Compra_idCompra`)
    REFERENCES `Smart_Fit`.`Compra` (`idCompra`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;

CREATE INDEX `fk_Operador_Mensaje1_idx` ON `Smart_Fit`.`Operador` (`Mensaje_idMensaje` ASC);

CREATE INDEX `fk_Operador_Pedido1_idx` ON `Smart_Fit`.`Operador` (`Pedido_id Pedido` ASC, `Pedido_IdCliente` ASC);

CREATE INDEX `fk_Operador_Compra1_idx` ON `Smart_Fit`.`Operador` (`Compra_idCompra` ASC);


-- -----------------------------------------------------
-- Table `Smart_Fit`.`CategoriaProductos`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `Smart_Fit`.`CategoriaProductos` (
  `idCategoria` INT NOT NULL,
  `IdProducto` VARCHAR(45) NOT NULL,
  `Producto_idProducto` INT NOT NULL,
  PRIMARY KEY (`idCategoria`),
  CONSTRAINT `fk_CategoriaProductos_Producto1`
    FOREIGN KEY (`Producto_idProducto`)
    REFERENCES `Smart_Fit`.`Producto` (`idProducto`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;

CREATE INDEX `fk_CategoriaProductos_Producto1_idx` ON `Smart_Fit`.`CategoriaProductos` (`Producto_idProducto` ASC);


-- -----------------------------------------------------
-- Table `Smart_Fit`.`Categoria`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `Smart_Fit`.`Categoria` (
  `Id` INT NOT NULL,
  `nombre` VARCHAR(45) NOT NULL,
  `orden` VARCHAR(100) NOT NULL,
  `Imagen` VARCHAR(45) NOT NULL,
  `mostrar` TINYINT NOT NULL,
  `nivelIdentacion` VARCHAR(45) NOT NULL,
  `seccion` VARCHAR(45) NOT NULL,
  `CategoriaProductos_idCategoria` INT NOT NULL,
  PRIMARY KEY (`Id`),
  CONSTRAINT `fk_Categoria_CategoriaProductos1`
    FOREIGN KEY (`CategoriaProductos_idCategoria`)
    REFERENCES `Smart_Fit`.`CategoriaProductos` (`idCategoria`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;

CREATE INDEX `fk_Categoria_CategoriaProductos1_idx` ON `Smart_Fit`.`Categoria` (`CategoriaProductos_idCategoria` ASC);


-- -----------------------------------------------------
-- Table `Smart_Fit`.`Foto`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `Smart_Fit`.`Foto` (
  `idFoto` INT NOT NULL,
  `path` VARCHAR(45) NOT NULL,
  `Producto_idProducto` INT NOT NULL,
  PRIMARY KEY (`idFoto`),
  CONSTRAINT `fk_Foto_Producto1`
    FOREIGN KEY (`Producto_idProducto`)
    REFERENCES `Smart_Fit`.`Producto` (`idProducto`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;

CREATE INDEX `fk_Foto_Producto1_idx` ON `Smart_Fit`.`Foto` (`Producto_idProducto` ASC);


-- -----------------------------------------------------
-- Table `Smart_Fit`.`ComentarioProducto`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `Smart_Fit`.`ComentarioProducto` (
  `idComentarioCliente` INT NOT NULL,
  `Texto` LONGTEXT NOT NULL,
  `Fecha` DATE NOT NULL,
  `Contestacion` TEXT(150) NOT NULL,
  `FechaContestacion` DATE NOT NULL,
  `lenguage` VARCHAR(45) NOT NULL,
  `Producto_idProducto` INT NOT NULL,
  `Cliente_idCliente` INT NOT NULL,
  PRIMARY KEY (`idComentarioCliente`),
  CONSTRAINT `fk_ComentarioProducto_Producto1`
    FOREIGN KEY (`Producto_idProducto`)
    REFERENCES `Smart_Fit`.`Producto` (`idProducto`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_ComentarioProducto_Cliente1`
    FOREIGN KEY (`Cliente_idCliente`)
    REFERENCES `Smart_Fit`.`Cliente` (`idCliente`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;

CREATE INDEX `fk_ComentarioProducto_Producto1_idx` ON `Smart_Fit`.`ComentarioProducto` (`Producto_idProducto` ASC);

CREATE INDEX `fk_ComentarioProducto_Cliente1_idx` ON `Smart_Fit`.`ComentarioProducto` (`Cliente_idCliente` ASC);


SET SQL_MODE=@OLD_SQL_MODE;
SET FOREIGN_KEY_CHECKS=@OLD_FOREIGN_KEY_CHECKS;
SET UNIQUE_CHECKS=@OLD_UNIQUE_CHECKS;
